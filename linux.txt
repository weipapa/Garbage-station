docker：
	查看cuda版本：cat usr/local/cuda/version.txt
	查看cudnn版本：cat usr/include/cudnn.h | grep CUDNN_MAJOR -A 2
	将容器提交为镜像：docker commmit -a "[作者]" -m "[说明]" [容器名]:[版本]
	docker run --runtime=nvidia -it -v /home/lpw:/home/lpw -p 2333:8888 tf-1.13:latest /bin/bash

vim常用命令
	hjkl：移动光标
	A:在一行末尾插入字符
	a:在光标后插入字符
	i:在光标前插入字符
	x:删除当前光标位置的字符
	数字0：移动光标到行首
	
	操作符 + 数字 + 动作
	更改类操作符：c，删除类操作符：d，复制操作符y
	动作列表：
		e:	从当前光标直到单词末尾，包括最后一个字符
		w：	从当前光标直到下一个单词起始处，不包括它的第一个字符
		$:	从当前光标处直到当前行末尾
		
	数字 + dd ：删除几行
	u：撤销最后执行的命令，U撤销对整行的修改
	p：将最后一次删除的内容或复制的内容粘贴在光标之后
	r和一个字符替换光标位置的字符
	R可以连续替换多个字符
	ce:删除一个单词直到末尾并进入插入模式
	ctrl-g:显示状态信息行，显示的内容是当前编辑的文件名和光标位置
	G：使光标直接跳转到文件最后一行
	gg：使光标跳转到文件第一行
	数字 + G：跳转到指定行
	输入/加上一个字符串可以在当前文件中查找该字符串，n向后查找，N向前查找
	%：查找配对的括号
	
	替换操作：
		:s/[old]/[new]替换光标所在行的第一个匹配串
		:s/[old]/[new]/g替换光标所在行的所有匹配串
		:#,#s/[old]/[new]/g替换指定两行中间所有匹配串
		:%s/[old]/[new]/g替换整个文件的每个匹配串
		:%s/[old]/[new]/gc找到整个文件的每个匹配串并询问是否替换
	
	:w [文件名]：保存文件
	v：进入可视模式
	:![command]执行外部命令command
	o:在光标下方打开新的一行并进入插入模式
	O:在光标上方打开新的一行并进入插入模式

linux用户组
	添加用户组：sudo adduser [用户名]
	更改用户密码：sudo passwd [用户名]
	删除用户：sudo deluser [用户名] --remove-home
	切换到用户：su [用户名]
	查看用户所在用户组：groups [用户名]
	将用户添加到sudo用户组：sudo usermod -G sudo [用户名]

linux常用命令
	新建文件：touch [文件名]
	新建目录：mkdir [目录名]
		mkdir -p [父目录/子目录]  -p关键字可以创建多级目录
	复制文件：cp [] []
	复制目录：cp -r [] [] 关键字-r起迭代作用
	删除文件：rm []
		rm -rf []   关键字-r起迭代作用，-f起强制作用
	文件的移动与重命名：mv [] []
	查看文件：cat -n []   关键字-n显示行号
	
	修改文件所有者： chown [用户] [文件名]
	修改文件权限： chmod [] [文件名]
	
	find:
	find基本命令格式为: find [path] [option] [action]
	以文件名查找：find [path] -name [文件名]
	查找后缀文件时要用转义字符：find [path] -name \*.py
	
	文件打包与解压缩：
	zip -r -e -l -[1-9] -q -o [文件名.zip] [待压缩文件] -x [*.zip]
		关键字-r表示递归打包子目录，-e表示加密，
		-l表示让文件在windows上解压没有问题
		-[1-9]表示压缩级别，9体积最小，
		-q表示安静模式，不像屏幕输出信息，-o表示输出文件后面紧跟文件名
	unzip -q -O [文件格式如GBK] [文件名.zip]
		关键字-O指定编码类型
	tar打包工具：
	tar -cf [打包文件名.tar] [待打包文件] 
		关键字-c创建一个tar包文件，-f指定文件名，后面紧跟文件名
	tar -xf [文件名.tar] -C [指定目录]
		关键字-x解包文件，-C指定目录
	tar压缩文件格式与参数
		*.tar.gz	-z
		*.tar.xz	-J
		*.tar.bz2	-j
		
	查看磁盘容量：df -h
	查看目录容量：du -h -d [数字] [path] 关键字-d指定查看目录的深度，0表示1级目录，1表示2级目录。
	
	type + [command]可以查看命令是shell内建命令还是外部命令
	对于内建命令，可以使用help [command]查看帮助信息，对于外部命令[command] --help
	man [command]可以对内建和外部命令使用
	
	wc [关键字] [path]:统计文本信息 
		-l：行数
		-w：单词数
		-c：字节数
		-m：字符数
		-L：最长行字节数
	
	apt-get常用工具：
		install：其后加软件包名，用于安装一个软件包
		update：更新本地软件包列表
		upgrade：升级本地可更新的软件包
		dist-upgrade：解决依赖关系并升级(存在一定危险性)
		remove：移除已安装的软件包，包括有依赖关系的软件包，但不包含软件包的配置文件
		autoremove：移除之前被其他软件包依赖，但现在不再使用的软件包
		purge：与remove相同，但会完全移除软件包，包含其配置文件
		clean：移除下载到本地的已安装的软件包，默认保存在/var/cache/apt/archives/
		autoclean：移除已安装的软件的旧版本软件包
	apt-get常用参数：
		-y：自动回应
		-s：模拟安装
		-q：安静模式安装
		-f：修复损坏的依赖关系
		-d：只下载不安装
		--reinstall：重新安装已安装但可能存在问题的软件包
		--install-suggests：同时安装apt给出的建议安装的软件包
		
	
	dpkg安装常用参数：
		-i：安装指定deb包
		-R：后面加目录名，用于安装该目录下的所有deb包
		-r：remove，移除某个已经安装的包
		-I：显示deb包文件的信息
		-s：显示已安装软件的信息
		-S：搜索已安装的软件包
		-L：显示已安装的软件包的目录信息